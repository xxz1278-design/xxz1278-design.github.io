SEQN,
RIDSTATR,
Age = RIDAGEYR,
Gender = RIAGENDR,
#Key variables
Mean_SBP,
Mean_DBP,
BP_Category,
Sedentary_Mins = PAD680,
LDL_Cholesterol = LBDLDL,
LDL_Category,
Triglycerides = LBXTR,
Fasting_Glucose = LBXGLU
)%>%
#converting na
mutate(
Sedentary_Mins = na_if(Sedentary_Mins, 7777),
Sedentary_Mins = na_if(Sedentary_Mins, 9999)
)%>%
drop_na()
final_data <- readRDS("data/final_data.Rds") %>%
select(
#Demo
SEQN,
RIDSTATR,
Age = RIDAGEYR,
Gender = RIAGENDR,
#Key variables
Mean_SBP,
Mean_DBP,
BP_Category,
Sedentary_Mins = PAD680,
LDL_Cholesterol = LBDLDL,
LDL_Category,
Triglycerides = LBXTR,
Fasting_Glucose = LBXGLU
)%>%
#converting na
mutate(
Sedentary_Mins = na_if(Sedentary_Mins, 7777),
Sedentary_Mins = na_if(Sedentary_Mins, 9999)
)%>%
drop_na()
# Calculate mean SBP/DBP and BP level
final_data <- clean_data_adults %>%
mutate(
Mean_SBP = rowMeans(select(., BPXOSY1, BPXOSY2, BPXOSY3), na.rm = TRUE),
Mean_DBP = rowMeans(select(., BPXODI1, BPXODI2, BPXODI3), na.rm = TRUE) )%>%
mutate(
BP_Category = case_when(
(Mean_SBP >= 140) | (Mean_DBP >= 90) ~ "4. Stage 2 Hypertension (>=140 or >=90)",
(Mean_SBP >= 130 & Mean_SBP < 140) | (Mean_DBP >= 80 & Mean_DBP < 90) ~ "3. Stage 1 Hypertension (130-139 or 80-89)",
(Mean_SBP >= 120 & Mean_SBP < 130) & (Mean_DBP < 80) ~ "2. Elevated (120-129 and <80)",
(Mean_SBP < 120) & (Mean_DBP < 80) ~ "1. Normal (<120 and <80)",
TRUE ~ NA_character_
)
) %>%
mutate(
BP_Category = factor(BP_Category, levels = c(
"1. Normal (<120 and <80)",
"2. Elevated (120-129 and <80)",
"3. Stage 1 Hypertension (130-139 or 80-89)",
"4. Stage 2 Hypertension (>=140 or >=90)"
))
)
print(table(final_data$BP_Category, useNA = "ifany"))
#Chol level
final_data <- final_data %>%
mutate(
LDL_Category = case_when(
LBDLDL >= 160 ~ "4. Very High Risk (>=160)",
LBDLDL >= 130 & LBDLDL < 160 ~ "3. High Risk (130-159)",
LBDLDL >= 100 & LBDLDL < 130 ~ "2. Borderline (100-129)",
LBDLDL < 100 ~ "1. Optimal (<100)",
TRUE ~ NA_character_
)
) %>%
mutate(
LDL_Category = factor(LDL_Category, levels = c(
"1. Optimal (<100)",
"2. Borderline (100-129)",
"3. High Risk (130-159)",
"4. Very High Risk (>=160)"
))
)
print(table(final_data$LDL_Category, useNA = "ifany"))
saveRDS(final_data, "data/final_data.Rds")
final_data <- readRDS("data/final_data.Rds") %>%
select(
#Demo
SEQN,
RIDSTATR,
Age = RIDAGEYR,
Gender = RIAGENDR,
#Key variables
Mean_SBP,
Mean_DBP,
BP_Category,
Sedentary_Mins = PAD680,
LDL_Cholesterol = LBDLDL,
LDL_Category,
Triglycerides = LBXTR,
Fasting_Glucose = LBXGLU
)%>%
#converting na
mutate(
Sedentary_Mins = na_if(Sedentary_Mins, 7777),
Sedentary_Mins = na_if(Sedentary_Mins, 9999)
)%>%
drop_na()
final_n <- nrow(final_data)
cat("Study 1 case number:", final_n, "\n")
print(head(final_data))
saveRDS(final_data, "data/final_variables.rds")
#| title: Mean SBP vs. LDL Cholesterol Level
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = LDL_Cholesterol, y = Fasting_Glucose)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "LDL Cholesterol (mg/dL)",
y = "Mean Systolic Blood Pressure (mmHg)",
caption = "Red line shows linear relationship between LDL and SBP"
) +
theme_minimal(base_size = 14)
cor_result <- cor.test(final_data$LDL_Cholesterol,
final_data$Mean_SBP,
method = "pearson")
print(cor_result)
#| title: Mean SBP vs. LDL Cholesterol Level
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = LDL_Cholesterol, y = Mean_SBP)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "LDL Cholesterol (mg/dL)",
y = "Mean Systolic Blood Pressure (mmHg)",
caption = "Red line shows linear relationship between LDL and SBP"
) +
theme_minimal(base_size = 14)
cor_result <- cor.test(final_data$LDL_Cholesterol,
final_data$Mean_SBP,
method = "pearson")
print(cor_result)
#| title: Mean SBP vs. LDL Cholesterol Level
# 1. 运行相关性检验，设置 90% 置信区间
cor_result_90 <- cor.test(final_data$LDL_Cholesterol,
final_data$Mean_SBP,
method = "pearson",
conf.level = 0.90) # **关键修改点：设置为 0.90**
# 2. 从结果中提取关键统计量
r_coefficient <- round(cor_result_90$estimate, 4)
p_value <- cor_result_90$p.value
df_value <- cor_result_90$parameter
ci_low <- round(cor_result_90$conf.int[1], 4)
ci_high <- round(cor_result_90$conf.int[2], 4)
# 3. 创建一个用于报告的整洁 tibble
correlation_report_tbl <- tibble(
Statistic = c("Pearson's r", "90% CI", "Degrees of Freedom (df)", "P-value"),
Value = c(
as.character(r_coefficient),
paste0("[", ci_low, ", ", ci_high, "]"),
as.character(df_value),
format.pval(p_value, digits = 4) # 格式化 P 值
)
)
# 4. 使用 knitr::kable 格式化为报告表格
correlation_report_tbl %>%
knitr::kable(
col.names = c("Statistic", "Value"),
caption = "Pearson Correlation between LDL Cholesterol and Mean SBP"
) %>%
# 使用 kableExtra 包进行额外的表格美化（如果已安装）
kableExtra::kable_styling(
bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE
)
#| title: Mean SBP vs. LDL Cholesterol Level
library(tidyverse)
# library(knitr) # 确保 knitr 库已加载
# library(kableExtra) # 如果要使用更高级的 kable 美化功能
# 1. 运行相关性检验，设置 90% 置信区间
cor_result_90 <- cor.test(final_data$LDL_Cholesterol,
final_data$Mean_SBP,
method = "pearson",
conf.level = 0.90) # **关键修改点：设置为 0.90**
# 2. 从结果中提取关键统计量
r_coefficient <- round(cor_result_90$estimate, 4)
p_value <- cor_result_90$p.value
df_value <- cor_result_90$parameter
ci_low <- round(cor_result_90$conf.int[1], 4)
ci_high <- round(cor_result_90$conf.int[2], 4)
# 3. 创建一个用于报告的整洁 tibble
correlation_report_tbl <- tibble(
Statistic = c("Pearson's r", "90% CI", "Degrees of Freedom (df)", "P-value"),
Value = c(
as.character(r_coefficient),
paste0("[", ci_low, ", ", ci_high, "]"),
as.character(df_value),
format.pval(p_value, digits = 4) # 格式化 P 值
)
)
# 4. 使用 knitr::kable 格式化为报告表格
correlation_report_tbl %>%
knitr::kable(
col.names = c("Statistic", "Value"),
caption = "Pearson Correlation between LDL Cholesterol and Mean SBP"
)
#| title: Mean SBP vs. LDL Cholesterol Level
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = LDL_Cholesterol, y = Mean_SBP)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "LDL Cholesterol (mg/dL)",
y = "Mean Systolic Blood Pressure (mmHg)",
caption = "Red line shows linear relationship between LDL and SBP"
) +
theme_minimal(base_size = 14)
cor_result_90 <- cor.test(final_data$LDL_Cholesterol,
final_data$Mean_SBP,
method = "pearson",
conf.level = 0.90)
r_coefficient <- round(cor_result_90$estimate, 4)
p_value <- cor_result_90$p.value
df_value <- cor_result_90$parameter
ci_low <- round(cor_result_90$conf.int[1], 4)
ci_high <- round(cor_result_90$conf.int[2], 4)
correlation_report_tbl <- tibble(
Statistic = c("Pearson's r", "90% CI", "Degrees of Freedom (df)", "P-value"),
Value = c(
as.character(r_coefficient),
paste0("[", ci_low, ", ", ci_high, "]"),
as.character(df_value),
format.pval(p_value, digits = 4)
)
)
correlation_report_tbl %>%
knitr::kable(
col.names = c("Statistic", "Value"),
caption = "Pearson Correlation between LDL Cholesterol and Mean SBP"
)
#| title: Mean SBP vs. LDL Cholesterol Level
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = Fasting_Glucose, y = Mean_SBP)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "LDL Cholesterol (mg/dL)",
y = "Mean Systolic Blood Pressure (mmHg)"
) +
theme_minimal(base_size = 14)
#| title: Mean SBP vs. LDL Cholesterol Level
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = Mean_SBP, y = Fasting_Glucose)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "LDL Cholesterol (mg/dL)",
y = "Mean Systolic Blood Pressure (mmHg)"
) +
theme_minimal(base_size = 14)
#| title: Mean SBP vs. LDL Cholesterol Level
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = LDL_Cholesterol, y = Fasting_Glucose)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "LDL Cholesterol (mg/dL)",
y = "Mean Systolic Blood Pressure (mmHg)"
) +
theme_minimal(base_size = 14)
#| title: Mean SBP vs. LDL Cholesterol Level
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = Mean_SBP, y = Fasting_Glucose)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "LDL Cholesterol (mg/dL)",
y = "Mean Systolic Blood Pressure (mmHg)"
) +
theme_minimal(base_size = 14)
#| title: Mean SBP vs. LDL Cholesterol Level
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = Mean_SBP, y = LDL_Cholesterol)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "LDL Cholesterol (mg/dL)",
y = "Mean Systolic Blood Pressure (mmHg)"
) +
theme_minimal(base_size = 14)
cor_result_90 <- cor.test(final_data$LDL_Cholesterol,
final_data$Mean_SBP,
method = "pearson",
conf.level = 0.90)
r_coefficient <- round(cor_result_90$estimate, 4)
p_value <- cor_result_90$p.value
df_value <- cor_result_90$parameter
ci_low <- round(cor_result_90$conf.int[1], 4)
ci_high <- round(cor_result_90$conf.int[2], 4)
correlation_report_tbl <- tibble(
Statistic = c("Pearson's r", "90% CI", "Degrees of Freedom (df)", "P-value"),
Value = c(
as.character(r_coefficient),
paste0("[", ci_low, ", ", ci_high, "]"),
as.character(df_value),
format.pval(p_value, digits = 4)
)
)
correlation_report_tbl %>%
knitr::kable(
col.names = c("Statistic", "Value"),
caption = "Pearson Correlation between LDL Cholesterol and Mean SBP"
)
#| title: LDL Cholesterol Level vs. Mean SBP
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = Mean_SBP, y = LDL_Cholesterol)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "Mean Systolic Blood Pressure (mmHg)",
y = "LDL Cholesterol (mg/dL)"
) +
theme_minimal(base_size = 14)
cor_result_90 <- cor.test(final_data$LDL_Cholesterol,
final_data$Mean_SBP,
method = "pearson",
conf.level = 0.90)
r_coefficient <- round(cor_result_90$estimate, 4)
p_value <- cor_result_90$p.value
df_value <- cor_result_90$parameter
ci_low <- round(cor_result_90$conf.int[1], 4)
ci_high <- round(cor_result_90$conf.int[2], 4)
correlation_report_tbl <- tibble(
Statistic = c("Pearson's r", "90% CI", "Degrees of Freedom (df)", "P-value"),
Value = c(
as.character(r_coefficient),
paste0("[", ci_low, ", ", ci_high, "]"),
as.character(df_value),
format.pval(p_value, digits = 4)
)
)
correlation_report_tbl %>%
knitr::kable(
col.names = c("Statistic", "Value"),
caption = "Pearson Correlation between LDL Cholesterol and Mean SBP"
)
#| title: Mean SBP vs. LDL Cholesterol Level
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = LDL_Cholesterol, y = Fasting_Glucose)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "LDL Cholesterol (mg/dL)",
y = "Mean Systolic Blood Pressure (mmHg)"
) +
theme_minimal(base_size = 14)
#| title: Mean SBP vs. LDL Cholesterol Level
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = Fasting_Glucose, y = Mean_SBP)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "LDL Cholesterol (mg/dL)",
y = "Mean Systolic Blood Pressure (mmHg)"
) +
theme_minimal(base_size = 14)
#| title: Mean SBP vs. LDL Cholesterol Level
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = Fasting_Glucose, y = Mean_SBP)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "LDL Cholesterol (mg/dL)",
y = "Mean Systolic Blood Pressure (mmHg)"
) +
theme_minimal(base_size = 14)
cor_result_90 <- cor.test(final_data$LDL_Cholesterol,
final_data$Mean_SBP,
method = "pearson",
conf.level = 0.90)
r_coefficient <- round(cor_result_90$estimate, 4)
p_value <- cor_result_90$p.value
df_value <- cor_result_90$parameter
ci_low <- round(cor_result_90$conf.int[1], 4)
ci_high <- round(cor_result_90$conf.int[2], 4)
correlation_report_tbl <- tibble(
Statistic = c("Pearson's r", "90% CI", "Degrees of Freedom (df)", "P-value"),
Value = c(
as.character(r_coefficient),
paste0("[", ci_low, ", ", ci_high, "]"),
as.character(df_value),
format.pval(p_value, digits = 4)
)
)
correlation_report_tbl %>%
knitr::kable(
col.names = c("Statistic", "Value"),
caption = "Pearson Correlation between "
)
#| title: Mean SBP vs. Fasting Glucose
#| fig-asp: 0.75
final_data %>%
ggplot(aes(x = Fasting_Glucose, y = Mean_SBP)) +
geom_point(alpha = 0.3, color = "#0e2635") +
geom_smooth(
method = "lm",
color = "#dc3545",
fill = "#ffc107",
linewidth = 1.5
) +
labs(
x = "Fasting_Glucose (mg/dL)",
y = "Mean Systolic Blood Pressure (mmHg)"
) +
theme_minimal(base_size = 14)
cor_result_90 <- cor.test(final_data$Fasting_Glucose,
final_data$Mean_SBP,
method = "pearson",
conf.level = 0.90)
r_coefficient <- round(cor_result_90$estimate, 4)
p_value <- cor_result_90$p.value
df_value <- cor_result_90$parameter
ci_low <- round(cor_result_90$conf.int[1], 4)
ci_high <- round(cor_result_90$conf.int[2], 4)
correlation_report_tbl <- tibble(
Statistic = c("Pearson's r", "90% CI", "Degrees of Freedom (df)", "P-value"),
Value = c(
as.character(r_coefficient),
paste0("[", ci_low, ", ", ci_high, "]"),
as.character(df_value),
format.pval(p_value, digits = 4)
)
)
correlation_report_tbl %>%
knitr::kable(
col.names = c("Statistic", "Value"),
caption = "Pearson Correlation between Mean SBP and Fasting Glucose"
)
