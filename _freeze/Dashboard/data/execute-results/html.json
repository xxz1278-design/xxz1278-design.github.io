{
  "hash": "3817ab3c10d60063b89c7c22cee013ca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"data\"\nformat: html\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(nhanesA)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.demo .cell-code}\nbp_raw <- nhanes('P_DEMO') |> tibble()\nprint(head(bp_raw))\nsaveRDS(bp_raw, \"data/P_DEMO.Rds\")\n```\n:::\n\n\n\n\n::: {.cell}\n\n```{.bp .cell-code}\nbp_raw <- nhanes('P_BPXO') |> tibble()\nprint(head(bp_raw))\nsaveRDS(bp_raw, \"data/P_BPXO.Rds\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.chol .cell-code}\nbp_raw <- nhanes('P_TRIGLY') |> tibble()\nprint(head(bp_raw))\nsaveRDS(bp_raw, \"data/P_TRIGLY.Rds\")\n```\n:::\n\n\n\n\n::: {.cell}\n\n```{.pa .cell-code}\nbp_raw <- nhanes('P_PAQ') |> tibble()\nprint(head(bp_raw))\nsaveRDS(bp_raw, \"data/P_PAQ.Rds\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}